plugins {
    id 'org.springframework.boot'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    implementation project(':core-domain')
    implementation project(':common-module')

    // API REST
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // DB
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Feign
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.1.3'

    // RedisTemplate & Lettuce
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Spring Security (UsernamePasswordAuthenticationToken, GrantedAuthority 등)
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT (io.jsonwebtoken.*)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // AWS
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
    implementation 'io.awspring.cloud:spring-cloud-starter-aws-secrets-manager-config:2.4.4'

    // CoolSMS 등 외부 API
    implementation 'net.nurigo:sdk:4.3.0'
    implementation 'net.nurigo:javaSDK:2.2'

    // WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // lombok (IDE 인식)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // RabbitMQ (AMQP)
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

jar {
    enabled = false
}

def queryDslSrcDir = 'src/main/generated/querydsl/'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(queryDslSrcDir))
}

sourceSets {
    main.java.srcDirs += [queryDslSrcDir]
}

clean {
    delete file(queryDslSrcDir)
}
