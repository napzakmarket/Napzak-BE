plugins {
    id 'java'
    id 'java-library'
    id 'io.spring.dependency-management'
}

group = 'com.napzak'
version = '1.0.0'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // 공통 모듈(BaseEntity 등)
    implementation project(':common-module')

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // JSON 컬럼용 Hibernate Types (json to String mapping)
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'

    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:3.3.1"
    }
}

// QueryDSL source output
def queryDslSrcDir = 'src/main/generated/querydsl/'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(queryDslSrcDir))
}

sourceSets {
    main.java.srcDirs += [queryDslSrcDir]
}

clean {
    delete file(queryDslSrcDir)
}
