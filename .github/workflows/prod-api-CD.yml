name: prod-api-CD

on:
  push:
    branches: [ "main" ]

env:
    ECR_HOST: ${{ secrets.API_ECR_HOST }}
    ECR_APP_NAME: ${{ secrets.API_ECR_APP_NAME }}
    IMAGE_TAG: ${{ github.sha }}

permissions:
  id-token: write
  contents: read

jobs:
  build-push:
    runs-on: ubuntu-22.04
    environment: prod

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Inject API secrets
        run: |
          printf '%s' "${{ secrets.API_APPLICATION_PROD }}" > api-server/src/main/resources/application-api-prod.yml
          mkdir -p api-server/src/main/resources/firebase
          printf '%s' "${{ secrets.API_FIREBASE_JSON_B64 }}" | base64 -d \
            > api-server/src/main/resources/firebase/napzak-firebase-adminsdk.json

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.API_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.API_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-northeast-2 | \
          docker login --username AWS --password-stdin ${{ env.ECR_HOST }}

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "${{ env.ECR_APP_NAME }}" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "${{ env.ECR_APP_NAME }}" >/dev/null

      - name: Build & push API image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile-api-prod
          push: true
          tags: |
            ${{ env.ECR_HOST }}/${{ env.ECR_APP_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.ECR_HOST }}/${{ env.ECR_APP_NAME }}:latest

  deploy:
    needs: build-push
    runs-on: ubuntu-22.04
    environment: prod

    steps:
      - name: SSH deploy
        uses: appleboy/ssh-action@master
        env:
          ECR_HOST: ${{ env.ECR_HOST }}
          ECR_APP_NAME: ${{ env.ECR_APP_NAME }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        with:
          host: ${{ secrets.PROD_API_SERVER_HOST }}
          username: ${{ secrets.PROD_SERVER_USERNAME }}
          key: ${{ secrets.PROD_API_SERVER_KEY }}
          envs: ECR_HOST, ECR_APP_NAME, IMAGE_TAG
          script: |
            bash /home/ubuntu/Napzak-BE/deploy-blue-green.sh
